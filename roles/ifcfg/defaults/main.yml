---
# defaults file for ifcfg

ifcfg_ifcfg:
  bridge0:
    device: 'bridge0'
    type: 'Bridge'
    ipaddr: '192.168.1.1'
    mask: '255.255.255.0'
    onboot: 'yes'
  en0:
    device: 'en0'
    type: 'Ethernet'
    hwaddr: 'AA:BB:CC:DD:EE:FF'
    mask: '255.255.255.0'
    bridge: 'bridge0'

# ifcfg_ifcfg:
#   name:
#     device: name of device
#     type: type (e.g. Bridge/Ethernet)
#     onboot: enable on boot (yes/no)
#     bootproto: (e.g. dhcp/none/static)
#     bridge: what interface is bridged for (e.g. bridge0)
#     ipaddr: IP address (e.g. 192.168.0.100)
#     mask: netmask (e.g. 255.255.255.0)
#     network: network address (e.g. 192.168.0.0)
#     bcast: broadcast address (e.g. 192.168.0.255)
#     onparent: bring up when parent comes up (e.g. yes/no)
#     hwaddr: MAC address (e.g. 82:13:15:38:70:44)
#     metric: routing metric (e.g. 100)
#     mtu: max transmission unit (e.g. 4096)
#     ethtool_opts: ethtool options (e.g. autoneg off duplex full)
#     bonding_opts: bonding options (e.g. mode=4 miimon=100 lacp_rate=1)
#     master: which bond this interface is linked to (e.g. bond0)
#     slave: this interface is a slave (e.g. yes)
#     vlan: this is vlan tagged (e.g. yes)
#     gateway: gateway (e.g. 192.168.0.1)
#     nm_controlled: set to no to disable NetworkManager for this NIC
#     delay: configure delay to wait until NIC is up
#     userctl: allow non-root users to control (e.g. yes)
#     dns1: add a DNS server (e.g. 8.8.8.8)
#     dns2: add a DNS server (e.g. 8.8.4.4)
#     peerdns: update resolv.conf when using DHCP or if DNS= is set
#     srcaddr: specify source IP address for outgoing packets (e.g. 192.168.0.100)
